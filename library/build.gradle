buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2'
    classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.3.1'
  }
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.kt3k.coveralls'

version = '0.2.0'

repositories {
  jcenter()
  maven {
    url  'https://dl.bintray.com/android/android-tools'
  }
}

dependencies {
  compile 'com.android.tools.lint:lint-tests:24.3.1'
  compile group: 'junit', name: 'junit', version: '4.11'
  testCompile "org.mockito:mockito-core:1.9.5"
  testCompile 'org.assertj:assertj-core:3.1.0'
}

jacocoTestReport {
  reports {
    xml.enabled = true // coveralls plugin depends on xml format report
    html.enabled = true
  }
}

jar {
  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar, javadocJar
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java

      artifact sourcesJar
      artifact javadocJar
    }
  }
}

bintray {
  user = project.hasProperty('bintray_user') ? bintray_user : ''
  key = project.hasProperty('bintray_key') ? bintray_key : ''
  publications = ['mavenJava']
  dryRun = false
  publish = false
  pkg {
    repo = 'maven'
    name = 'de.ad:lint-junit-rule'
    desc = 'A JUnit rule which allows unit testing of custom Lint rules.'
    websiteUrl = 'https://github.com/a11n/lint-junit-rule'
    issueTrackerUrl = 'https://github.com/a11n/lint-junit-rule/issues'
    vcsUrl = 'https://github.com/a11n/lint-junit-rule.git'
    licenses = ['MIT']
    labels = ['Android', 'lint', 'JUnit']
    publicDownloadNumbers = false
    version {
      name = project.version
      desc = ''
    }
  }
}
